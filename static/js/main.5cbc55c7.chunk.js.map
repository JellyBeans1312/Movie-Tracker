{"version":3,"sources":["reducers/index.js","reducers/movieReducer.js","reducers/userReducer.js","actions/index.js","components/Movie/Movie.js","components/MovieContainer/MovieContainer.js","api/apiCalls.js","components/MovieSpecs/MovieSpecs.js","components/Login/Login.js","components/AccountMenu/AccountMenu.js","components/SignUp/SignUp.js","components/SignUpMenu/SignUpMenu.js","components/NavBar/NavBar.js","App.js","api/apiKey.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","movies","state","arguments","length","undefined","action","type","login","user","showError","error","userFavorites","favorites","setFavorites","Movie","_ref","poster","id","imgSrc","concat","react_default","a","createElement","react_router_dom","to","key","className","src","alt","MovieContainer","displayMovies","map","movie","components_Movie_Movie","backDrop","backdrop_path","poster_path","rating","vote_average","title","addUser","Object","asyncToGenerator","regenerator_default","mark","_callee","options","response","wrap","_context","prev","next","method","body","JSON","stringify","headers","Content-Type","fetch","sent","abrupt","ok","t0","console","log","message","Error","stop","_x","apply","this","getUser","_ref2","_callee2","result","_context2","json","data","_x2","favoriteMovie","_ref3","_callee3","movieInfo","_context3","_x3","fetchFavorites","_ref4","_callee4","userId","_context4","_x4","removeFavorite","_ref5","_callee5","movieId","option","_context5","_x5","_x6","MovieSpecs","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFavorite","_this$props","overview","release_date","isFavorited","movie_id","user_id","then","setState","handleDelete","_this$props2","inherits","createClass","value","_this2","_this$props3","onClick","Component","connect","store","dispatch","Login","email","password","handleChange","handleSubmit","onSubmit","name","placeholder","onChange","AccountMenu","e","_e$target","target","defineProperty","preventDefault","display","view","react_router","Login_Login_Login","SignUp","handleAddChange","handleAdd","SignUpMenu","SignUp_SignUp_SignUp","NavBar","logOutUser","logout","exact","path","render","components_MovieContainer_MovieContainer","components_AccountMenu_AccountMenu","match","params","description","find","parseInt","components_MovieSpecs_MovieSpecs","logoutUser","components_SignUpMenu_SignUpMenu","App","_componentDidMount","res","results","catch","showMovies","components_NavBar_NavBar","Boolean","window","location","hostname","createStore","composeWithDevTools","router","es","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cbc55c7.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { movieReducer } from './movieReducer';\nimport { loginUserReducer, showErrorReducer, userFavoritesReducer } from './userReducer';\n\nconst rootReducer = combineReducers({\n  movies: movieReducer,\n  login: loginUserReducer,\n  showError: showErrorReducer,\n  userFavorites: userFavoritesReducer\n});\n\nexport default rootReducer;","export const movieReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SHOW_MOVIES':\n      return action.movies;\n\n    default:\n      return state;\n  }\n}","export const showErrorReducer = (state = '', action) => {\n  switch (action.type) {\n    case \"SHOW_ERROR\":\n      return action.error\n  \n    default:\n      return state;\n  }\n}\n\nexport const loginUserReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return action.user;\n    case 'LOGOUT':\n      return {}\n    default:\n      return state;\n  }\n}\n\nexport const userFavoritesReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_FAVORITES':\n      return action.favorites;\n    default:\n      return state;\n  }\n}","export const showMovies = (movies) => ({\n  type: 'SHOW_MOVIES',\n  movies\n});\n\nexport const login = (user) => ({\n  type: 'LOGIN',\n  user\n});\n\nexport const logOut = () => ({\n  type: 'LOGOUT'\n})\n\nexport const showError = (error) => ({\n  type: \"SHOW_ERROR\",\n  error\n});\n\nexport const setFavorites = (favorites) => ({\n  type: 'SET_FAVORITES',\n  favorites\n})\n ","import React from 'react';\nimport '../Movie/Movie.css'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({ poster, id }) => {\n  const imgSrc = `http://image.tmdb.org/t/p/w185//${poster}`\n  return (\n    <Link to={`/${id}`} key={id} className='movie'>\n        <img src={imgSrc} alt=\"movie poster\"/>\n    </Link>\n  )\n}\n\nMovie.propTypes = {\n  poster: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport '../MovieContainer/MovieContainer.css'\n\nconst MovieContainer = ({ movies }) => {\n  const displayMovies = movies.map(movie => {\n    return (\n      <Movie\n        backDrop={movie.backdrop_path}\n        poster={movie.poster_path}\n        rating={movie.vote_average}\n        id={movie.id}\n        key={movie.id}\n        title={movie.title}\n      />\n    )\n  })\n\n  return (\n    <section className='movie-container'>\n      {displayMovies}\n    </section>\n  )\n}\n\nexport default MovieContainer;","  // const url = 'http://localhost:3000'\nimport { apiKey } from './apiKey'\n\nexport const fetchMovies = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}edd&language=en-US&page=1`)\n    .then(res => res.json())\n    .then(res => res.results)\n    .catch (error => error.message)   \n}\n\nexport const addUser = async (user) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const response = await fetch('http://localhost:3000/api/users/new', options)\n  \n    return response.ok;\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(\"Failed to post error\");\n  }\n}\n\nexport const getUser = async (user) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n   \n    const response = await fetch('http://localhost:3000/api/users', options)\n    const result = await response.json()\n    \n    return result.data\n  } catch (error) {\n    throw new Error(\"Email and password do not match\");\n  } \n}\n\nexport const favoriteMovie = async (movieInfo) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(movieInfo),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    await fetch(`http://localhost:3000/api/users/favorites/new`, options)\n  \n  } catch (error) {\n    throw new Error(\"Failed to fetch favorites\");\n  }\n}\n\nexport const fetchFavorites = async (userId) => {\n  try {\n    const response = await fetch(`http://localhost:3000/api/users/${userId}/favorites`);\n    const result = await response.json();\n    return result.data\n  } catch (error) {\n    throw new Error('Failed to fetch favorites');\n  }\n}\n\nexport const removeFavorite = async (userId, movieId) => {\n  try {\n    const option = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    await fetch(`http://localhost:3000/api/users/${userId}/favorites/${movieId}`, option);\n    \n  } catch (error) {\n    throw new Error('Failed to remove favorite')\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../MovieSpecs/MovieSpecs.css'\nimport { connect } from 'react-redux';\nimport { favoriteMovie, removeFavorite, fetchFavorites } from '../../api/apiCalls';\nimport { setFavorites } from '../../actions';\nimport PropTypes from 'prop-types';\n\n\nexport class MovieSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      isFavorited: false,\n    }\n  }\n\n\n  handleFavorite = async () => {\n    if (this.state.isFavorited === true) {\n      return\n    }\n    try {\n      const { title, poster_path, overview, vote_average, release_date, user, id} = this.props;\n      await favoriteMovie({ movie_id: id, user_id: user.id, title, poster_path, release_date, vote_average, overview});\n      await fetchFavorites(user.id)\n      .then(result => this.props.setFavorites(result))\n      this.setState({ isFavorited: true })\n    } catch (error) {\n      this.setState({ error: error.message })\n    }\n  } \n\n  handleDelete = async () => {\n    try {\n      const {user, id} = this.props;\n      await removeFavorite(user.id, id)\n      await fetchFavorites(user.id)\n      .then(result => this.props.setFavorites(result))\n      this.setState({ isFavorited: false });\n    } catch (error) {\n      this.setState({ error: error.message })\n    }\n  }\n \n  render() {\n    const { title, backdrop_path, overview, vote_average, release_date} = this.props;\n    const imgSrc = `http://image.tmdb.org/t/p/w1280//${backdrop_path}`\n    return (\n      <div className='container'>\n        <h1 className='title'>{title}\n          <span className='rating'> Rating : {vote_average} / 10 </span>\n\n          <button onClick={() => this.handleFavorite()} className='btn fav'>\n            Add to Favorites\n          </button>\n          <button onClick={() => this.handleDelete()} className='btn del'>\n            Delete Favorite\n          </button>\n        </h1>\n        <img src={imgSrc} alt=\"movie backdrop\" className='back-drop'/>\n        <p className='description'>{overview}</p>\n        <p className='date'>Release Date: {release_date}</p>\n        <h3>{this.state.error}</h3>\n        <Link to={`/LoggedIn`}>\n          <button className='back-btn'>\n           ◀ back\n          </button>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = store => ({\n  user: store.login,\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nMovieSpecs.propTypes = {\n  user: PropTypes.object.isRequired,\n  setFavorites: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  backdrop_path: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieSpecs);","import React from 'react';\nimport './Login.css'\nimport PropTypes from 'prop-types';\n\nexport const Login = ({ email, password, handleChange, handleSubmit}) => {\n  return (\n    <section>\n      <form className='log-in-form' onSubmit={handleSubmit}>\n        <input className='log-in-email'\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder='example@example.com'\n          onChange={handleChange}\n          />\n        <input className='log-in-password'\n          type=\"password\"\n          value={password}\n          name=\"password\"\n          placeholder='Password'\n          onChange={handleChange}\n          />\n        <button className='log-in-btn'>Login</button>\n      </form>\n    </section>\n     )\n  };\n\n  Login.propTypes = {\n    email: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired\n  }","import React, { Component } from 'react';\nimport { Login } from '../Login/Login';\nimport { login, showError } from '../../actions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router'\nimport { getUser } from '../../api/apiCalls'\nimport { fetchFavorites } from '../../api/apiCalls';\nimport { setFavorites } from '../../actions'\nimport './AccountMenu.css'\nimport PropTypes from 'prop-types';\n\nexport class AccountMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      display: 'start',\n      error: null\n    };\n  }\n  \n  handleChange = (e) => {\n    const {name, value} = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      await getUser(this.state)\n      .then(data => this.props.login(data))\n      this.setState({display: 'loggedIn'})\n      await fetchFavorites(this.props.user.id)\n      .then(result => this.props.setFavorites(result))\n    } catch (error) {\n      this.setState({ error: error.message })\n    }\n  }\n\n  render() {\n    const isLoggedIn = this.state.display === 'loggedIn'\n    let view;\n    \n    if(!isLoggedIn) {\n      view = <Login email={this.state.email} password={this.state.password} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\n    } else {\n      view = <Redirect to='/LoggedIn'/>\n    } \n    return (  \n      <div className='log-in-bar'>\n        {view}\n        {this.state.error && <h2 className='error'>{this.state.error}</h2>}\n      </div>\n    )\n  }\n};\n\nexport const mapStateToProps = (store) => ({\n  // login: store.login,\n  user: store.login,\n  // error: store.showError\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n  // showError: (error) => dispatch(showError(error)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nAccountMenu.propTypes = {\n  user: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  favorites: PropTypes.array.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountMenu)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './SignUp.css'\nimport PropTypes from 'prop-types';\n\nexport const SignUp = ({name, email, password, handleAddChange, handleAdd}) => {\n  return (\n    <section>\n      <form className='sign-in-form' onSubmit={handleAdd}>\n        <input className='sign-up'\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder='Name'\n          onChange={handleAddChange}\n        />\n        <input className='sign-up'\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder='example@example.com'\n          onChange={handleAddChange}\n        />\n        <input className='sign-up'\n          type=\"password\"\n          value={password}\n          name=\"password\"\n          placeholder='Password'\n          onChange={handleAddChange}\n        />\n      <button className='sign-up-btn'>Sign Up</button>\n    </form>\n  </section>\n  )\n};\n\nexport const mapStateToProps = store => ({\n  error: store.error\n});\n\nSignUp.propTypes = {\n  error: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleAddChange: PropTypes.func.isRequired\n}\n\nexport default connect(mapStateToProps)(SignUp);","import React, { Component } from 'react';\nimport { SignUp } from '../SignUp/SignUp'\nimport { login, showError } from '../../actions';\nimport { connect } from 'react-redux';\nimport { getUser, addUser } from '../../api/apiCalls'\nimport { Redirect } from 'react-router'\nimport './SignUpMenu.css'\nimport PropTypes from 'prop-types';\n\nexport class SignUpMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      display: '',\n      error: null\n    };\n  }\n\n  handleAddChange = (e) => {\n    const {name, value} = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleAdd = async (e) => {\n    try {\n      e.preventDefault()\n      const response = await addUser(this.state);\n      console.log(response)\n      if (response === true) {\n        this.props.login(this.state)\n        this.setState({display: 'loggedIn'})\n      } else {\n        this.setState({ error: \"Email has already been used\" });\n      }\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  render() {\n    const isLoggedIn = this.state.display === 'loggedIn'\n    let view;\n\n    if(!isLoggedIn) {\n      view = <SignUp name={this.state.name} email={this.state.email} password={this.state.password} handleAddChange={this.handleAddChange} handleAdd={this.handleAdd}/>\n    } else {\n      view = <Redirect to='/LoggedIn'/>\n    }\n    return (\n      <section className='sign-up-bar' >\n        {view}\n        {this.state.error && <h2 className='error'>{this.state.error}</h2>}\n      </section>\n    )\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n  showError: (error) => dispatch(showError(error))\n});\n\nSignUpMenu.propTypes = {\n  login: PropTypes.func.isRequired,\n  showError: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n}\n\nexport default connect(null, mapDispatchToProps)(SignUpMenu)\n","// import React from 'react';\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom'\nimport MovieContainter from '../MovieContainer/MovieContainer'\nimport MovieSpecs from '../MovieSpecs/MovieSpecs'\nimport AccountMenu from '../AccountMenu/AccountMenu'\nimport SignUpMenu  from '../SignUpMenu/SignUpMenu'\nimport { logOut, setFavorites } from '../../actions';\nimport { connect } from 'react-redux';\nimport './NavBar.css'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  logOutUser = () => {\n    this.props.logout();\n    this.props.setFavorites([]);\n  }\n\n  render () {\n  return (\n    <div>\n      <div className = 'header'>\n        <h1 className='app-name'> <span className='bang'>!</span>Netflix</h1>\n        {this.props.user !== null && <NavLink to='/favorites' className='nav-fav'>\n          <button className='nav-btn'>Favorites</button>\n        </NavLink>} \n        <NavLink to='/Login' className='nav-log-in'>\n          <button className='nav-log-in-btn'>Login</button>\n        </NavLink>\n        <NavLink to='/signup' className='nav-sign-up'>\n          <button className='nav-btn'>Sign Up</button>\n        </NavLink>\n      </div>\n      <Route exact path='/' render={() => \n        <section>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n      <Route exact path='/Login' render={() => \n        <section>\n          <AccountMenu user={this.props.user}/>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n      <Route exact path='/LoggedIn' render={() =>\n        <section>\n          <div className='logged-in-bar'>\n            <h2 className='user-name'>{this.props.user.name && `Welcome ${this.props.user.name}!`}</h2>\n          <Link to='/' onClick={() => this.logOutUser()}>\n            <button className='sign-out-btn'>Sign Out</button>\n          </Link>\n          </div>\n          <MovieContainter movies={this.props.movies}/> \n        </section> \n      }/>\n      <Route exact path='/:id' render={({match}) => {\n        const {id} = match.params;\n        const description = this.props.movies.find(movie => {\n          return movie.id === parseInt(id)\n        });\n        return description && <MovieSpecs {...description} />\n      }}/>\n      <Route exact path='/Favorites' render={() =>\n        <section>\n          <div className='logged-in-bar'>\n            <h2 className='user-name'>{this.props.user.name && `Welcome ${this.props.user.name}!`}</h2>\n          <Link to='/' onClick={() => this.logOutUser()}>\n            <button className='sign-out-btn' onClick={this.logoutUser}>Sign Out</button>\n          </Link>\n          </div>\n          <MovieContainter movies={this.props.userFavorites} />\n        </section>\n      }/>\n      <Route exact path='/signup' render={() => \n        <section>\n          <SignUpMenu user={this.props.user}/>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n    </div>\n    )\n  }\n}\n\nexport const mapStateToProps = store => ({\n  userFavorites: store.userFavorites\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logOut()),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nNavBar.propTypes = {\n  user: PropTypes.object.isRequired,\n  movies: PropTypes.array.isRequired,\n  logOut: PropTypes.func.isRequired,\n  setFavorites: PropTypes.func.isRequired,\n  userFavorites: PropTypes.array.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, { Component } from 'react';\nimport './App.css';\nimport { showMovies } from './actions'\nimport { connect } from 'react-redux';\nimport NavBar from './components/NavBar/NavBar';\nimport { fetchMovies } from './api/apiCalls';\nimport PropTypes from 'prop-types';\n\nexport class App extends Component {\n  async componentDidMount() { \n    await fetchMovies()\n      .then(movies => this.props.showMovies(movies))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar movies={this.props.movies} user={this.props.login}/>\n      </div>\n    );\n  }\n}\n\n  const mapStateToProps = (state) => ({\n    movies: state.movies,\n    login: state.login\n  });\n\n  const mapDispatchToProps = (dispatch) => ({\n    showMovies: (movies) => dispatch (showMovies(movies))\n  });\n\n  App.propTypes = {\n    login: PropTypes.object.isRequired,\n    movies: PropTypes.array.isRequired,\n    showMovies: PropTypes.func.isRequired\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const apiKey = '044b86cc1259591cb5a872bda8d25';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst router = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App /> \n    </Provider>\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}